apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.1"

    defaultConfig {
        applicationId "com.androidmk.example"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//       现在推荐使用externalNativeBuild 了。
        ndk{
            moduleName"hello-jni"
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            ldLibs("log") //添加log 但是没有管用。尴尬
        }
//        // 指导我们的 源文件 编译
//        externalNativeBuild {
//            ndkBuild {
//                abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
//            }
//        }


    }
    externalNativeBuild{
        ndkBuild{
            path "src/main/jni/Android.mk"
//            path "src/main/ndkBuild/Android.mk"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = ['src/main/jni', 'src/main/jni/']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
